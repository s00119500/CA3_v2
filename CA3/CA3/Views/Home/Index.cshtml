@using PagedList;
@using PagedList.Mvc;
@using BootstrapSupport
@*@model BootstrapSupport.HtmlHelpers.IPagedList<CA3.Models.Product> = wrong *@ 
@model IPagedList<CA3.Models.Product>
@*changed Ienumerable to Ipagedlist*@
<!DOCTYPE html>

<html>
<head>
    <script src="~/scripts/jquery-1.9.1.min.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script> @*should probably be in the bundle config file 
                                                                     but if i leave it here i'll remember to add it when i'm revising*@
    <meta name="viewport" content="width=device-width" />
    <title>CA 3</title>
</head>
<body>
    <p>
        @*@Html.ActionLink("Create New", "Create")*@
        @*@Html.ActionLink("test", "Details", "Home")*@
         
    </p>
    <table class="table table-hover">
        <tr>
            <th @*title="i am tool tip !"*@>
                @Html.DisplayNameFor(model => model.First().ProductName)
                @* added .First() to the titles because paged list requires us to specify the type explcitly*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().SupplierID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CategoryID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Discontinued)
            </th>
            <th></th>
        </tr>
        
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QuantityPerUnit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsInStock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UnitsOnOrder)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReorderLevel)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discontinued)
            </td>
            @*<td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }) |
                @Html.ActionLink("Details", "Details", new { id=item.ProductID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ProductID })
            </td>*@
            <td>
                @*tag that loads partial view*@
                @Ajax.ActionLink("Associated Orders", "displayOrdersForProduct", new AjaxOptions() { 
           HttpMethod = "Post", ///get or post
           UpdateTargetId = "displayForOrders", // target id (div)
           InsertionMode = InsertionMode.Replace  //replaces old data with current
           })
                @*@Ajax.ActionLink("test","test", new AjaxOptions(){ HttpMethod = "Get", UpdateTargetId ="displayForOrders", InsertionMode = InsertionMode.Replace })*@
            </td>
        </tr>
    }
    
    </table>
    <div class="pagination">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),      /// this displays the PagedList control
                                                                                    /// page = the parameter passed, int
                                                                                    /// Url.Action = name of the controller action
                                                                                    /// PagedListRenderOptions is a way of setting options like display
    new PagedListRenderOptions() { DisplayPageCountAndCurrentLocation = true })
    </div>
   
     <div style="background-color:grey" id="displayForOrders"> @* this div is for the partial view that will display 3 orders that contain the most products for the selected product*@
        <table></table>
    </div>
    
</body>
</html>
